-- CDC Triggers Creation Script for backend
-- Generated at: 2025-08-07T16:31:07.735Z
-- Prefix: _cdc_
-- DO NOT EDIT THIS FILE MANUALLY

-- ============================================
-- Universal CDC Trigger Function
-- ============================================

CREATE OR REPLACE FUNCTION backend_universal_cdc_trigger() RETURNS TRIGGER AS $$
DECLARE
  cdc_table_name TEXT;
  cdc_prefix TEXT := '_cdc_';
  insert_columns TEXT;
  select_columns TEXT;
  col RECORD;
BEGIN
  -- Construct CDC table name
  cdc_table_name := cdc_prefix || TG_TABLE_NAME;
  
  -- Build column lists dynamically
  insert_columns := '"' || cdc_prefix || 'timestamp", "' || cdc_prefix || 'operation", "' || cdc_prefix || 'acknowledge"';
  select_columns := 'NOW(), ''' || TG_OP || ''', FALSE';
  
  -- Add all columns from the original table
  FOR col IN 
    SELECT column_name 
    FROM information_schema.columns 
    WHERE table_name = TG_TABLE_NAME 
    AND table_schema = 'public'
    ORDER BY ordinal_position
  LOOP
    insert_columns := insert_columns || ', "' || col.column_name || '"';
    IF TG_OP = 'DELETE' THEN
      select_columns := select_columns || ', $1."' || col.column_name || '"';
    ELSE
      select_columns := select_columns || ', $2."' || col.column_name || '"';
    END IF;
  END LOOP;
  
  -- Execute the INSERT into CDC table
  IF TG_OP = 'DELETE' THEN
    EXECUTE format('INSERT INTO %I (%s) SELECT %s', cdc_table_name, insert_columns, select_columns) USING OLD, NULL;
    RETURN OLD;
  ELSIF TG_OP = 'UPDATE' THEN
    EXECUTE format('INSERT INTO %I (%s) SELECT %s', cdc_table_name, insert_columns, select_columns) USING NULL, NEW;
    RETURN NEW;
  ELSIF TG_OP = 'INSERT' THEN
    EXECUTE format('INSERT INTO %I (%s) SELECT %s', cdc_table_name, insert_columns, select_columns) USING NULL, NEW;
    RETURN NEW;
  END IF;
  
  RETURN NULL;
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- Table Triggers
-- ============================================

-- Trigger for: users
DROP TRIGGER IF EXISTS users_cdc_trigger ON users;
CREATE TRIGGER users_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON users
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: roles
DROP TRIGGER IF EXISTS roles_cdc_trigger ON roles;
CREATE TRIGGER roles_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON roles
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: permissions
DROP TRIGGER IF EXISTS permissions_cdc_trigger ON permissions;
CREATE TRIGGER permissions_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON permissions
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: permissionsUsersMap
DROP TRIGGER IF EXISTS permissionsUsersMap_cdc_trigger ON permissionsUsersMap;
CREATE TRIGGER permissionsUsersMap_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON permissionsUsersMap
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: permissionsRolesMap
DROP TRIGGER IF EXISTS permissionsRolesMap_cdc_trigger ON permissionsRolesMap;
CREATE TRIGGER permissionsRolesMap_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON permissionsRolesMap
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: usersRolesMap
DROP TRIGGER IF EXISTS usersRolesMap_cdc_trigger ON usersRolesMap;
CREATE TRIGGER usersRolesMap_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON usersRolesMap
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: usersGroups
DROP TRIGGER IF EXISTS usersGroups_cdc_trigger ON usersGroups;
CREATE TRIGGER usersGroups_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON usersGroups
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: usersGroupsMap
DROP TRIGGER IF EXISTS usersGroupsMap_cdc_trigger ON usersGroupsMap;
CREATE TRIGGER usersGroupsMap_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON usersGroupsMap
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: permissionsGroupsMap
DROP TRIGGER IF EXISTS permissionsGroupsMap_cdc_trigger ON permissionsGroupsMap;
CREATE TRIGGER permissionsGroupsMap_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON permissionsGroupsMap
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: projects
DROP TRIGGER IF EXISTS projects_cdc_trigger ON projects;
CREATE TRIGGER projects_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON projects
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: functionalUnits
DROP TRIGGER IF EXISTS functionalUnits_cdc_trigger ON functionalUnits;
CREATE TRIGGER functionalUnits_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON functionalUnits
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: fsNodes
DROP TRIGGER IF EXISTS fsNodes_cdc_trigger ON fsNodes;
CREATE TRIGGER fsNodes_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON fsNodes
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: comments
DROP TRIGGER IF EXISTS comments_cdc_trigger ON comments;
CREATE TRIGGER comments_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON comments
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: groups
DROP TRIGGER IF EXISTS groups_cdc_trigger ON groups;
CREATE TRIGGER groups_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON groups
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: groupMemberships
DROP TRIGGER IF EXISTS groupMemberships_cdc_trigger ON groupMemberships;
CREATE TRIGGER groupMemberships_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON groupMemberships
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: companies
DROP TRIGGER IF EXISTS companies_cdc_trigger ON companies;
CREATE TRIGGER companies_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON companies
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: payments
DROP TRIGGER IF EXISTS payments_cdc_trigger ON payments;
CREATE TRIGGER payments_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON payments
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

-- Trigger for: unitOwnersMap
DROP TRIGGER IF EXISTS unitOwnersMap_cdc_trigger ON unitOwnersMap;
CREATE TRIGGER unitOwnersMap_cdc_trigger
  AFTER INSERT OR UPDATE OR DELETE ON unitOwnersMap
  FOR EACH ROW
  EXECUTE FUNCTION backend_universal_cdc_trigger();

