{
  "name": "indexes-app",
  "version": "1.0.0",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "dev": "docker compose -f docker-compose.dev.yml up --build",
    "dev:local": "concurrently \"npm run dev --workspace=api\" \"npm run dev --workspace=web\"",
    "dev:logs": "docker compose -f docker-compose.dev.yml logs -f",
    "dev:stop": "docker compose -f docker-compose.dev.yml down",
    "dev:clean": "docker compose -f docker-compose.dev.yml down -v",
    "dev:rebuild": "docker compose -f docker-compose.dev.yml build --no-cache",
    "dev:api": "docker compose -f docker-compose.dev.yml logs -f api",
    "dev:web": "docker compose -f docker-compose.dev.yml logs -f web",
    "dev:monitoring": "docker compose -f docker-compose.dev.yml --profile monitoring up -d",
    "build": "npm run build --workspace=api && npm run build --workspace=web",
    "test": "npm run test --workspace=api && npm run test --workspace=web",
    "lint": "npm run lint --workspace=api && npm run lint --workspace=web",
    "start": "docker compose -f devops/docker/docker-compose.yml up -d",
    "start:prod": "docker compose -f devops/docker/docker-compose.yml up -d",
    "stop": "docker compose -f devops/docker/docker-compose.yml down",
    "setup-project": "node scripts/setup-project.js",
    "sync-template": "node scripts/sync-with-template.js",
    "sync-template:advanced": "node scripts/sync-with-template-advanced.js",
    "deploy": "node scripts/trigger-deploy.js",
    "deploy:dev": "node scripts/trigger-deploy.js dev",
    "deploy:staging": "node scripts/trigger-deploy.js staging",
    "deploy:prod": "node scripts/trigger-deploy.js main",
    "deploy:manual": "node scripts/deploy.js",
    "docker:up": "docker compose -f devops/docker/docker-compose.yml up -d",
    "docker:down": "docker compose -f devops/docker/docker-compose.yml down",
    "docker:build": "docker compose -f devops/docker/docker-compose.yml build",
    "docker:logs": "docker compose -f devops/docker/docker-compose.yml logs -f",
    "docker:logs:api": "docker logs ${APP_NAME:-app}-api -f",
    "docker:logs:web": "docker logs ${APP_NAME:-app}-web -f",
    "install:all": "npm install",
    "db:migrate": "node scripts/db.js migrate",
    "db:seed": "node scripts/db.js seed",
    "db:backup": "node scripts/db.js backup",
    "db:audit": "node scripts/db.js audit",
    "db:reset": "node scripts/db.js reset",
    "db:status": "node scripts/db.js status",
    "db:help": "node scripts/db.js help",
    "db:migrate-permissions": "npx ts-node packages/api/drizzle/migrations/migrate-permission-names.ts",
    "db:rollback-permissions": "npx ts-node packages/api/drizzle/migrations/migrate-permission-names.ts rollback",
    "setup": "npm install && cp .env.example .env && echo 'Please edit .env with your configuration'",
    "api:logs": "docker-compose logs -f api",
    "web:logs": "docker-compose logs -f web",
    "mobile:start": "npm run start --workspace=mobile",
    "mobile:android": "npm run android --workspace=mobile",
    "mobile:ios": "npm run ios --workspace=mobile",
    "mobile:web": "npm run web --workspace=mobile",
    "clean:project": "docker compose -f docker-compose.dev.yml down --rmi local --volumes --remove-orphans",
    "clean:project:soft": "docker compose -f docker-compose.dev.yml down --remove-orphans",
    "clean:project:hard": "docker compose -f docker-compose.dev.yml down --rmi all --volumes --remove-orphans",
    "rebuild:project": "npm run clean:project && docker compose -f docker-compose.dev.yml build --no-cache",
    "restart:project": "npm run clean:project:soft && docker compose up -d",
    "logs:project": "docker compose logs -f",
    "setup:plausible": "node scripts/setup-plausible.js",
    "generate:secrets": "node scripts/generate-secrets.js",
    "upload:secrets": "node scripts/generate-secrets.js --upload"
  },
  "devDependencies": {
    "@types/lodash": "^4.17.20",
    "@types/node": "^24.1.0",
    "concurrently": "^8.2.2",
    "typescript": "^5.8.3"
  }
}